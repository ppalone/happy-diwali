{"version":3,"sources":["app.js"],"names":["canvas","document","querySelector","width","window","innerWidth","height","innerHeight","WIDTH","HEIGHT","ctx","getContext","alpha","fireworks","particles","GRAVITY","console","log","Firework","fx","fy","color","speed","x","y","blown","draw","PARTICLE_COUNT","ANGLE","Math","PI","i","push","Particle","floor","random","cos","sin","fillStyle","fill","fillRect","velocity","globalAlpha","beginPath","arc","strokeStyle","stroke","animate","forEach","firework","idx","splice","pos","update","length","particle","requestAnimationFrame","init"],"mappings":"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","file":"app.57366f37.js","sourceRoot":"../src","sourcesContent":["const canvas = document.querySelector('#canvas');\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nlet WIDTH = window.innerWidth;\nlet HEIGHT = window.innerHeight;\n\nconst ctx = canvas.getContext('2d', { alpha: false });\n\nconst fireworks = [];\nconst particles = [];\n\nconst GRAVITY = 0.006;\n\nconsole.log(\n  \"Wishing you a very Happy & Prosperous Diwali üéâ, Don't forget to leave a star ‚≠ê at https://github.com/ppalone/happy-diwali\"\n);\n\nclass Firework {\n  constructor(fx, fy, color, speed) {\n    this.x = fx;\n    this.y = HEIGHT;\n    this.fx = fx;\n    this.fy = fy;\n    this.speed = speed;\n    this.blown = false;\n    this.color = color;\n  }\n\n  update() {\n    this.draw();\n    if (this.y < this.fy) {\n      const PARTICLE_COUNT = 100;\n      const ANGLE = (Math.PI * 2) / PARTICLE_COUNT;\n\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\n        particles.push(\n          new Particle(\n            this.fx,\n            this.fy,\n            `hsl(${Math.floor(Math.random() * 360)}, 100%, 50%)`,\n            {\n              x: Math.cos(ANGLE * i) * Math.random(),\n              y: Math.sin(ANGLE * i) * Math.random(),\n            }\n          )\n        );\n      }\n      this.blown = true;\n    } else {\n      this.y -= this.speed;\n    }\n  }\n\n  draw() {\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.fillRect(this.x - 1, this.y, 2, 4);\n  }\n}\n\nclass Particle {\n  constructor(x, y, color, velocity) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.velocity = velocity;\n    this.alpha = 1;\n  }\n\n  draw() {\n    // ctx.save();\n    ctx.globalAlpha = this.alpha < 0 ? 0 : this.alpha;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, 2, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.strokeStyle = 'transparent';\n    ctx.fill();\n    ctx.stroke();\n    // ctx.restore();\n  }\n\n  update() {\n    this.velocity.y += GRAVITY;\n    this.x += this.velocity.x;\n    this.y += this.velocity.y;\n    this.alpha -= 0.005;\n    this.draw();\n  }\n}\n\nfunction animate() {\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.50)';\n  ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n  fireworks.forEach((firework, idx) => {\n    if (firework.blown) {\n      // Remove the old when blown\n      fireworks.splice(idx, 1);\n      // Spawn New Firework\n      let pos = {\n        x: 30 + Math.floor(Math.random() * (WIDTH - 30 * 2)),\n        y: 30 + Math.floor(Math.random() * (HEIGHT / 2)),\n      };\n      // let color = colors[Math.floor(Math.random() * colors.length)];\n      let speed = 4 + Math.floor(Math.random() * 4);\n      fireworks.push(\n        new Firework(\n          pos.x,\n          pos.y,\n          `hsl(${Math.floor(Math.random() * 360)}, 100%, 50%)`,\n          speed\n        )\n      );\n    } else {\n      firework.update();\n    }\n  });\n\n  particles.length > 0 &&\n    particles.forEach((particle, idx) => {\n      if (particle.alpha <= 0) {\n        particles.splice(idx, 1);\n      } else {\n        particle.update();\n      }\n    });\n\n  requestAnimationFrame(animate);\n}\n\nfunction init() {\n  let pos = {\n    x: 30 + Math.floor(Math.random() * (WIDTH - 30 * 2)),\n    y: 30 + Math.floor(Math.random() * (HEIGHT / 2)),\n  };\n  let speed = 4 + Math.floor(Math.random() * 4);\n  fireworks.push(\n    new Firework(\n      pos.x,\n      pos.y,\n      `hsl(${Math.floor(Math.random() * 360)},50%, 50%)`,\n      speed\n    )\n  );\n}\n\ninit();\nanimate();\n"]}
{"version":3,"sources":["app.js"],"names":["canvas","document","querySelector","width","window","innerWidth","height","innerHeight","WIDTH","HEIGHT","ctx","getContext","alpha","fireworks","particles","GRAVITY","colors","Firework","fx","fy","color","speed","x","y","blown","draw","PARTICLE_COUNT","ANGLE","Math","PI","i","push","Particle","cos","random","sin","fillStyle","fill","fillRect","velocity","save","globalAlpha","max","beginPath","arc","strokeStyle","stroke","restore","animate","forEach","firework","idx","splice","update","length","particle","requestAnimationFrame","setInterval","pos","floor"],"mappings":"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","file":"app.ddb7e664.js","sourceRoot":"../src","sourcesContent":["const canvas = document.querySelector('#canvas');\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nconst WIDTH = window.innerWidth;\nconst HEIGHT = window.innerHeight;\n\nconst ctx = canvas.getContext('2d', { alpha: false });\n\nconst fireworks = [];\nconst particles = [];\n\nconst GRAVITY = 0.005;\n\nconst colors = ['cyan', 'yellow', 'orange', 'white', 'lime'];\n\nclass Firework {\n  constructor(fx, fy, color, speed) {\n    this.x = fx;\n    this.y = HEIGHT;\n    this.fx = fx;\n    this.fy = fy;\n    this.speed = speed;\n    this.blown = false;\n    this.color = color;\n  }\n\n  update() {\n    this.draw();\n    if (this.y < this.fy) {\n      const PARTICLE_COUNT = 200;\n      const ANGLE = (Math.PI * 2) / PARTICLE_COUNT;\n\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\n        particles.push(\n          new Particle(this.fx, this.fy, this.color, {\n            x: Math.cos(ANGLE * i) * Math.random(),\n            y: Math.sin(ANGLE * i) * Math.random(),\n          })\n        );\n      }\n      this.blown = true;\n    } else {\n      this.y -= this.speed;\n    }\n  }\n\n  draw() {\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.fillRect(this.x - 1, this.y, 2, 4);\n  }\n}\n\nclass Particle {\n  constructor(x, y, color, velocity) {\n    this.x = x;\n    this.y = y;\n    this.color = color;\n    this.velocity = velocity;\n    this.alpha = 1;\n  }\n\n  draw() {\n    ctx.save();\n    ctx.globalAlpha = Math.max(this.alpha, 0);\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, 2, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.strokeStyle = 'transparent';\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  update() {\n    this.velocity.y += GRAVITY;\n    this.x += this.velocity.x;\n    this.y += this.velocity.y;\n    this.alpha -= 0.005;\n    this.draw();\n  }\n}\n\nfunction animate() {\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.25)';\n  ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n  fireworks.forEach((firework, idx) => {\n    if (firework.blown) {\n      fireworks.splice(idx, 1);\n    } else {\n      firework.update();\n    }\n  });\n  particles.length > 0 &&\n    particles.forEach((particle, idx) => {\n      if (particle.alpha <= 0) {\n        particles.splice(idx, 1);\n      } else {\n        particle.update();\n      }\n    });\n\n  requestAnimationFrame(animate);\n}\n\nanimate();\n\nsetInterval(function () {\n  let pos = {\n    x: 30 + Math.floor(Math.random() * (WIDTH - 30 * 2)),\n    y: 30 + Math.floor(Math.random() * (HEIGHT / 2)),\n  };\n  let color = colors[Math.floor(Math.random() * colors.length)];\n  let speed = 4 + Math.floor(Math.random() * 4);\n  fireworks.push(new Firework(pos.x, pos.y, color, speed));\n}, 2000);\n"]}